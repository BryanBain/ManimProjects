from manim import *

class ComplexTrig(Scene):
    def construct(self):
        intro_text = Tex("We know the familiar $x$, $y$, and $r$:").move_to(2*UP)
        self.play(Write(intro_text))
        self.wait()
        self.play(Uncreate(intro_text))
        axes = Axes(x_range = [0, 5, 1], y_range = [0, 5, 1], 
                    axis_config={'include_ticks':False}).shift(0.5*UP)
        self.play(Create(axes))
        point = Dot(axes.c2p(3,2))
        self.wait()
        self.play(Create(point))
        self.wait()
        point_lbl = Tex(r"$(x,y)$").next_to(point, RIGHT)
        self.play(Write(point_lbl))
        self.wait()
        hypotenuse = Line(axes.c2p(0,0), point, color=YELLOW).add_tip()
        self.play(Create(hypotenuse))
        theta = Tex(r"$\theta$").move_to(axes.c2p(0.75,0.25))
        self.play(Write(theta))
        self.wait()
        horiz_brace = Brace(Line(axes.c2p(0,0), axes.c2p(3,0)), color=BLUE)
        horiz_txt = horiz_brace.get_text("$x$").set_color(BLUE)
        self.play(Create(horiz_brace))
        self.play(Write(horiz_txt))
        self.wait()
        vert_brace = BraceBetweenPoints(axes.c2p(3,0), axes.c2p(3,2)).set_color(RED)
        vert_txt = vert_brace.get_text("$y$").set_color(RED)
        self.play(Create(vert_brace))
        self.play(Write(vert_txt))
        self.wait()
        hypot_brace = BraceBetweenPoints(axes.c2p(3,2), axes.c2p(0,0)).set_color(YELLOW)
        hypot_txt = hypot_brace.get_text("$r$").set_color(YELLOW)
        self.play(Create(hypot_brace))
        self.play(Write(hypot_txt))
        self.wait()
        self.remove(axes, point, point_lbl, hypotenuse, horiz_brace, 
        horiz_txt, vert_brace, vert_txt, hypot_brace, hypot_txt, theta)
        self.wait()

        complex_txt = Tex("With complex numbers, our plane becomes")
        self.play(Write(complex_txt))
        self.wait()
        self.play(Uncreate(complex_txt))
        complex_point_lbl = Tex(r"$(x,iy)$").next_to(point, RIGHT, buff=0.5)
        complex_vert_txt = vert_brace.get_text("$iy$").set_color(RED)
        horiz_vector = Line(start=axes.c2p(0,0), end=axes.c2p(3,0), color=BLUE).add_tip()
        vert_vector = Line(start=axes.c2p(3,0), end=axes.c2p(3,2), color=RED).add_tip()
        complex_resultant = Tex(r"$r = x + yi$").move_to(2*UP)
        complex_stuff = VGroup(axes, point, complex_point_lbl, hypotenuse, 
                            horiz_brace, horiz_txt, vert_brace, hypot_brace,
                            horiz_vector, vert_vector, hypot_txt, complex_vert_txt, 
                            complex_resultant, theta)
        self.play(Create(complex_stuff))
        self.wait()
        cosine = Tex(r"$\cos\left(\theta\right) = \dfrac{x}{r}$").to_edge(UR, buff=1)
        polar_x = Tex(r"$x = r\cos\left(\theta\right)$").next_to(cosine, 1.5*DOWN)
        self.play(Write(cosine))
        self.wait()
        self.play(Write(polar_x))
        self.wait()
        r_cos_theta = Tex(r"$r\cos(\theta)$", color=BLUE).move_to(horiz_txt)
        self.play(ReplacementTransform(horiz_txt, r_cos_theta))
        self.wait()
        self.remove(cosine, polar_x)
        sine = Tex(r"$\sin\left(\theta\right) = \dfrac{y}{r}$").to_edge(UR, buff=1)
        polar_y = Tex(r"$y = r\sin\left(\theta\right)$").next_to(sine, 1.5*DOWN)
        self.play(Write(sine))
        self.wait()
        self.play(Write(polar_y))
        self.wait()
        ir_sin_theta = Tex(r"$ir\sin(\theta)$", color=RED).next_to(vert_brace)
        self.play(ReplacementTransform(complex_vert_txt, ir_sin_theta))
        self.wait()
        self.remove(sine, polar_y)

        new_r = Tex(r"$x\cos(\theta) + iy\sin(\theta)$", color=YELLOW).next_to(hypot_brace)
        self.play(ReplacementTransform(hypot_txt, new_r))
        self.wait()
